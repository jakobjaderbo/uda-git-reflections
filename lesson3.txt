För att lägga upp filer på Github behöver du ett konto och ett repository där. 
När du har detta använder du öljande kommandon.

'git remote' (listar vilka remotes du har lagt till i git)
'git remote add name url' (lägger till en ny remote med valt namn, url ska vara en url till ditt repository)
'git push namn branch' (skriver vald branch ex. master till vald remote ex. origin)

Att ha filer i molnet på github ger dig frihet att arbeta från olika datorer,
underlättar samarbete med andra och ger dig en backup då du har en kopia av all din historik i git i molnet.

För att ta ner filer från github till din personliga dator använder du 'git pull'.

'git pull origin master' drar ner origin från github och drar in den till master på din dator.

Både pull och push har alltså konventionen 'git pu.. remote-name local-branch'.

En anledning till att du behöver göra git pull manuellt istället för att git, som exempelvis dropbox, automatiskt synkas
är att detger dig mer kontroll. Detta gäller särskilt om det är flera personer som samarbetar i ett projekt då kaos lätt
uppstår när flera personer gör ändringar parallellt med varandra.

Vill du skapa en egen version av ett annat projekt använder du dig av funktionen fork på github. Detta skapar ett repository
med en exakt kopia av det projekt du var intresserad av, men under ditt konto istället. 
Fork motsvarar att göra clone på githubs servrar och låter dig redigera projekt där du inte annars hade haft skrivrättigheter.

Skillnaden mellan fork, clone och branch är att en fork är en kopia mellan githubs servrar, en klon är en kopia till din dator
och slutligen en branch är ett parallellt spår i ett och samma repository.

Ifall det har skett ändringar både lokalt och på github kan en konflikt uppstå. För att dra ner den mest aktuella versionen
från github till din lokala master använder du 'git fetch'. Du kan därefter göra en merge om det skulle behövas. 
Om du använder kommandot 'git pull' kommer git automatiskt göra både fetch och merge.

'git fetch origin'
'git merge origin/master master'
= 'git pull origin'

En bra anledning att git håller senaste ända status på origin/master i minnet lokalt är att
det blir lätt att se vad du har ändrat sedan du senast gjorde en git pull. Det underlättar också
när du ska göra en git fetch eller pull om det har skett andra förändringar online.

Om du vill ha feedback på en feature innan du pusharden till origin/master kan du göra ändringen i
en separat branch som du kan pusha istället. Därerfter kan du skapa en pull request på github och samla in feedback
innan ni drar in ändringarna i master, eller inte om ni kommer fram till att den inte är redo.

Att samarbeta utan git kan vara knepigt då det är svårt att arbeta parallellt i samma fil eftersom du ofta saknar möjlighet att
hitta skillnader i parallella "branches" och dessutom saknar merge-verktyg.



